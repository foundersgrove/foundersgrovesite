@import "tailwindcss";
@plugin "daisyui";

@theme {
	--color-background: var(--background);
	--color-foreground: var(--foreground);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	:root {
		--font-sans: var(--font-inter);
		--font-heading: var(--font-outfit);
		--font-body: var(--font-work-sans);
	}

	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}
}

:root {
	--background: #ffffff;
	--foreground: #171717;
	--color-dark: #171717;
}

@media (prefers-color-scheme: dark) {
	:root {
		--background: #0a0a0a;
		--foreground: #ededed;
	}
}

body {
	/* min-height: 100vh; */
	overflow-y: scroll;
	color: var(--foreground);
	background: var(--background);
	font-family: var(--font-body);
}

h1, h2, h3, h4, h5, h6 {
	font-family: var(--font-heading);
}

/* .wrapper {
	height: 100vh;
	overflow-y: auto;
	overflow-x: hidden;
	/* perspective: 10px;
	position: relative;
} */

/* header {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100%;
	transform-style: preserve-3d;
	/* z-index: -1;
} */

footer {
	position: relative;
	z-index: 1;
	bottom: 0;
	width: 100%;
}

.back,
.fore {
	position: fixed;
	height: 100%;
	width: 100%;
	object-fit: cover;
	/* z-index: -1; */
}

.back {
	position: fixed;
	height: 100%;
	width: 100%;
	object-fit: cover;
	transform-origin: center bottom;
	animation: back-zoom linear;
	animation-timeline: scroll(y);
}

.fore {
	left: 100;
	transform: translateZ(-5px) scale(-1 -1);
}

@keyframes back-zoom {
	from {
		transform: scale(1) translateX(0);
	}
	to {
		transform: scale(2.5) translateX(0);
	}
}

.title {
	font-size: 3rem;
	color: var(--foreground);
	text-shadow: 0 0 5px var(--background);
}

section {
	font-size: 1rem;
	padding: 1rem;
	background-color: #333;
	color: white;
}

/* Modified to not interfere with plant growth animations */
.homecard {
	opacity: 0;
	animation: homecard-fade-in 0.5s ease-out forwards;
	animation-delay: 0.2s;
	animation-timeline: view();
	animation-range: entry 10% cover 30%;
}

@keyframes homecard-fade-in {
	to {
		opacity: 1;
	}
}

/* Plant growth animations */
.plant-container {
	position: relative;
	min-height: 200px;
}

.soil-effect {
	animation: soil-grow 1.5s ease-out forwards;
	animation-delay: 0.2s;
}

@keyframes soil-grow {
	0% {
		width: 0;
		opacity: 0;
	}
	10% {
		width: 10%;
		opacity: 0.3;
	}
	50% {
		width: 30%;
		opacity: 0.7;
		box-shadow: 0 0 10px 2px rgba(90, 122, 88, 0.5);
	}
	100% {
		width: 50%;
		opacity: 1;
		box-shadow: 0 0 15px 3px rgba(90, 122, 88, 0.7);
	}
}

.plant-grow {
	transform-origin: bottom center;
	opacity: 0;
	animation: plant-grow-animation 3s ease-out forwards;
	animation-delay: 0.5s;
}

.plant-grow-delay {
	transform-origin: bottom center;
	opacity: 0;
	animation: plant-grow-animation 3s ease-out 1.2s forwards;
}

.plant-grow-delay-2 {
	transform-origin: bottom center;
	opacity: 0;
	animation: plant-grow-animation 3s ease-out 2s forwards;
}

@keyframes plant-grow-animation {
	0% {
		transform: scaleY(0) translateY(50%);
		opacity: 0;
		color: #557A53;
	}
	20% {
		transform: scaleY(0.2) translateY(40%);
		opacity: 0.4;
		color: #6A9968;
	}
	40% {
		transform: scaleY(0.4) translateY(30%) rotate(2deg);
		opacity: 0.6;
		color: #7FB87D;
	}
	60% {
		transform: scaleY(0.7) translateY(20%) rotate(-1deg);
		opacity: 0.8;
		color: #94D292;
	}
	80% {
		transform: scaleY(0.95) translateY(5%) rotate(1deg);
		opacity: 0.9;
		color: #A9ECA7;
	}
	90% {
		transform: scaleY(1.02) translateY(-2%) rotate(-0.5deg);
		opacity: 1;
		color: #B4FFB2;
	}
	100% {
		transform: scaleY(1) translateY(0) rotate(0);
		opacity: 1;
		color: inherit;
	}
}

.plant-seed {
	animation: seed-appear 1s ease-out forwards;
}

@keyframes seed-appear {
	0% {
		opacity: 0;
		transform: translate(-50%, 10px) scale(0.5);
	}
	50% {
		opacity: 0.7;
		transform: translate(-50%, 5px) scale(0.8);
	}
	80% {
		opacity: 1;
		transform: translate(-50%, 0) scale(1.2);
	}
	100% {
		opacity: 1;
		transform: translate(-50%, 0) scale(1);
		box-shadow: 0 0 10px 2px rgba(60, 90, 58, 0.6);
	}
}
